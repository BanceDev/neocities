<style>
  html {
    overflow-y: hidden;
  }
  #editor {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  .theme-Code{
    float:right;
    position:relative;
    top:-50px;
  }
  .page {
    background: #1D1F21;
    position: fixed;
    height: 100%;
  }
  .footer-Base {
    display: none;
  }

  .monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label span {
    background-color: transparent !important;
    line-height: normal;
    vertical-align: middle;
    padding: 0;
    margin: 0;
  }
</style>
<link rel="stylesheet" data-name="vs/editor/editor.main" href="/js/monaco/min/vs/editor/editor.main.css">

<div class="header-Outro editor">
  <div class="row content">
    <div class="breadcrumbs">
      <a href="/dashboard"><strong>Dashboard</strong></a> >
      <span class="filename">
        <% dir_array = Pathname(@filename).dirname.to_s.split '/' %>
        <% dir_array = [] if dir_array == ['.'] %>
        <% dir_array.each_with_index do |dir,i| %><a href="/dashboard?dir=<%= Rack::Utils.escape dir_array[0..i].join('/') %>"><%= dir %></a> / <% end %><%= Pathname(@filename).basename %>
      </span>
    </div>
    <div class="tools">
      <div class="theme">
        Theme:
        <select id="theme" size="1" onchange="setTheme();" onkeyup="setTheme();">
          <optgroup label="Bright">
            <option value="vs-light">VS Light</option>
            <option value="hc-light">High Contrast Light</option>
          </optgroup>
          <optgroup label="Dark">
            <option value="vs-dark">VS Dark</option>
            <option value="hc-black">High Contrast Dark</option>
          </optgroup>
        </select>
      </div>
      <a id="saveButton" class="btn-Action" href="#" onclick="saveTextFile(false); return false" style="opacity: 0.5"><span class="hide-on-mobile"><i class="fa fa-save"></i></span>Save</a>
      <span class="hide-on-mobile">
        <a id="previewButton" class="btn-Action" href="#" onclick="togglePreview();"><span><i class="fa fa-eye"></i></span>Preview</a>
        <a class="btn-Action" href="<%= current_site.uri @filename %>" target="_blank"><i class="fa fa-globe"></i> Open</a>
        <a href="#" id="shareButton" class="btn-Action" data-container="body" data-toggle="popover" data-placement="bottom" data-content='<%== erb :'_share', layout: false, locals: {site: current_site, page_uri: "#{current_site.uri}/#{@filename}"} %>'><i class="fa fa-share-alt chat-button"></i> Share</a><!-- <% if current_site.supporter? %><a class="btn-Action" id="chatButton"><i class="fa fa-comments"></i> Penelope <span style="font-size: 8pt">(beta)</span></a><% end %> -->
      </span>
    <!-- <a id="saveAndExitButton" class="btn-Action" href="#" onclick="saveTextFile(true); return false" style="opacity: 0.5"><i class="fa fa-save"></i>&nbsp;&nbsp;Save and Exit</a> -->
      <div id="editorUpdates" class="tooltip fade bottom in hidden" style="top: 90px;right: 12.5em;">
        <div class="tooltip-arrow"></div>
        <div class="tooltip-inner">
          <span></span>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="/js/purify.min.js"></script>
<script src="/js/marked.min.js"></script>
<script src="/js/sse.min.js"></script>
<!--
<% if current_site.supporter? %>
  <script src="/js/chat.js"></script>
<% end %>
-->

<script src="/js/preview.js"></script>

<div class="row editor">
  <div class="col left-col" style="display: <% current_site.supporter? ? 'none' : 'block' %>; margin-left: 20px;">
    <div id="editor"><h3>Loading...</h3></div>
  </div>
  <div id="preview" class="col right-col chat-container" style="display:none;">
    <div class="resize-handle"></div>
    <iframe id="previewFrame" src="<%= current_site.uri @filename %>" width="100%" height="100%" style="background: white"></iframe>
  </div>

  <div class="col right-col chat-container" style="display: none">
    <div class="resize-handle"></div>
    <div id="chat-box" class="chat-box">
      <div class="bot-message message">
        <img src="/img/heartcat.png" style="width: 30px; margin-bottom: 10px;">
        <p>I'm Penelope, your coding assistant! I'm here to help you with your web site.</p>
        <p>I'm good at coding but can be wrong on general knowledge, <strong>so be sure to verify facts I give you</strong>.</p>
        <p>How can I help you today?</p>
      </div>
    </div>
    <div id="chat-form">
      <form>
        <input name="csrf_token" value="<%= csrf_token %>" type="hidden">
        <input type="text" id="chat-input" placeholder="Ask a coding question..." autocomplete="off">
        <button type="submit" class="btn-Action">Send</button>
      </form>
    </div>
  </div>
</div>

<script>var require = { paths: { 'vs': '/js/monaco/min/vs' } };</script>
<script src="/js/monaco/min/vs/loader.js"></script>
<script src="/js/monaco/min/vs/editor/editor.main.js"></script>

<script>
  var unsavedChanges = false

  function setTheme(name) {
    var editorTheme = $('#theme option:selected')
    monaco.editor.setTheme(editorTheme.val());
    $.post('/site/<%= current_site.username %>/set_editor_theme', {
      csrf_token: '<%= csrf_token %>',
      editor_theme: editorTheme.text()
    })
  }

  <% if current_site.editor_theme %>
    $('#theme option').filter(function() {
      return ($(this).text() == '<%= current_site.editor_theme %>')
    }).prop('selected', true)
  <% end %>
  
  function saveTextFile(quit) {
    if(unsavedChanges == false)
      return

    var formData = new FormData();
    var fileContent = editor.getValue();
    formData.append('<%== escape_javascript @filename %>', new File([fileContent], '<%== escape_javascript @filename %>', { type: 'text/html' }));
    formData.append('csrf_token', '<%== escape_javascript csrf_token %>');
    formData.append('username', '<%== escape_javascript current_site.username %>');

    $.ajax({
      url: '/api/upload',
      data: formData,
      processData: false,
      contentType: false,
      type: 'POST',
      error: function(jqXHR, textStatus, errorThrown) {
        var errorMessage = 'There has been an error saving your file, please try again. If it continues to fail, make a copy of the file locally so you don\'t lose your changes!'

        if(jqXHR.responseText) {
          try {
            // Attempt to parse the JSON responseText to get the error message
            var parsedResponse = JSON.parse(jqXHR.responseText);
            errorMessage += ' ERROR MESSAGE: ' + parsedResponse.message;
          } catch (error) {
          }
        }

        $('#saveButton').tooltip('show')
        $('#editorUpdates span').text(errorMessage)
        $('#editorUpdates').fadeIn()
        $('#editorUpdates').removeClass('hidden')
      },
      success: function(response, textStatus, xhr){
        console.log(xhr.status)
        if(xhr.status == 200) {
          unsavedChanges = false
          if(quit === true) {
            window.location = '/dashboard'
          } else {
            $('#editorUpdates span').html('<i class="fa fa-check"></i>&nbsp;&nbsp;Your file has been saved.')
            $('a#saveButton,a#saveAndExitButton').css('opacity', 0.5)
            setTimeout(function() {
              $('#editorUpdates').fadeOut();  //.addClass('hidden');
            }, 2000)
          }

        } else {
          $('#saveButton').tooltip('show')
          $('#editorUpdates span').text(response)
        }
        $('#editorUpdates').fadeIn()
        $('#editorUpdates').removeClass('hidden')

      }
    })
    var iframe = document.getElementById('previewFrame');
    iframe.contentWindow.location.href = iframe.src; 
  }

  var editor = {}


  $(document).ready(function() {
    $.ajax({
      url: "/site_files/download/<%= Site.escape_path(@filename) %>",
      cache: false,
      success: function(resp) {
        document.getElementById('editor').innerHTML = '';
        // Initialize Monaco Editor
        editor = monaco.editor.create(document.getElementById('editor'), {
          value: resp,
          language: '<%= @monaco_mode %>',
          fontSize: 14,
          automaticLayout: true,
          scrollBeyondLastLine: false,
          wordWrap: 'on',
          wrappingIndent: 'same',
          tabSize: 2,
          minimap: { enabled: false },
        });
        setTheme();

        // Handle change event for unsaved changes
        editor.onDidChangeModelContent(function() {
          $('a#saveButton,a#saveAndExitButton').css('opacity', 1);
          unsavedChanges = true;
        });

        // Add save command (Ctrl+S / Command+S)
        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, function() {
          saveTextFile(false);
        });
      }
    });
  });

  window.onbeforeunload = function() {
    if(unsavedChanges == true)
      return "You have unsaved changes!"
  }

  $('a#saveButton,a#saveAndExitButton').click(function() {
    if(!unsavedChanges)
      return false
    return true
  })

</script>
